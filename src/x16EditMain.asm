;
; File generated by cc65 v 2.18 - Git f8be35b
;
	.fopt		compiler,"cc65 v 2.18 - Git f8be35b"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_realloc
	.import		_printf
	.import		_clrscr
	.import		_gotoxy
	.import		_cputc
	.import		_cgetc
	.import		_cursor
	.import		_screensize
	.export		__lineBuffer
	.export		__workingLineBuffer
	.export		__editorLines
	.export		__editorLinesCapacity
	.export		__editorLineSegments
	.export		__firstFreeSegment
	.export		__maxLineSegment
	.export		__textPos
	.export		__screenSize
	.export		__statusBarLineNo
	.export		__debugLineNo
	.export		__maxLine
	.export		_DebugPrint
	.export		_DebugPrintSlow
	.export		_UpdateDocInfo
	.export		_EnsureEditorLinesCapacity
	.export		_Initialize
	.export		_PrintLineNumber
	.export		_GetNextFreeLineSegment
	.export		_SaveBufferToEditorMemory
	.export		_GetBufferFromEditorMemoryAndPrint
	.export		_GetWorkingLine
	.export		_Invalidate
	.export		_LineBufferToCurrentScreenLine
	.export		_CursorLeft
	.export		_CursorRight
	.export		_DeleteLine
	.export		_InsertChar
	.export		_DeleteChar
	.export		_Backspace
	.export		_CursorUp
	.export		_CursorDown
	.export		_HandleReturnKey
	.export		_main

.segment	"RODATA"

L009D:
	.byte	$CC,$49,$4E,$45,$53,$2D,$2A,$3A,$20,$25,$D8,$2F,$25,$D8,$00
L0094:
	.byte	$CB,$45,$59,$43,$4F,$44,$45,$3A,$20,$25,$30,$33,$44,$00
L008D:
	.byte	$C3,$4F,$4C,$55,$4D,$4E,$3A,$20,$25,$30,$33,$44,$00
L0086:
	.byte	$CC,$49,$4E,$45,$3A,$20,$25,$30,$34,$44,$00
L00A5:
	.byte	$4D,$41,$58,$CC,$D3,$3A,$20,$25,$44,$00
L019D:
	.byte	$25,$30,$34,$44,$3A,$00
L00E0	:=	L019D+0

.segment	"BSS"

__lineBuffer:
	.res	255,$00
__workingLineBuffer:
	.res	255,$00
__editorLines:
	.res	2,$00
__editorLinesCapacity:
	.res	2,$00
__editorLineSegments:
	.res	2,$00
__firstFreeSegment:
	.res	2,$00
__maxLineSegment:
	.res	2,$00
__textPos:
	.res	6,$00
__screenSize:
	.res	2,$00
__statusBarLineNo:
	.res	1,$00
__debugLineNo:
	.res	1,$00
__maxLine:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ DebugPrint (__near__ const unsigned char *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DebugPrint: near

.segment	"CODE"

	jsr     pushax
	lda     #$01
	jsr     pusha
	lda     __debugLineNo
	jsr     _gotoxy
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ DebugPrintSlow (__near__ const unsigned char *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DebugPrintSlow: near

.segment	"CODE"

	jsr     pushax
	lda     #$01
	jsr     pusha
	lda     __debugLineNo
	jsr     _gotoxy
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	lda     #$00
	sta     (sp)
	ldy     #$01
	sta     (sp),y
L0076:	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	cmp     #$20
	txa
	sbc     #$4E
	bvc     L007D
	eor     #$80
L007D:	bpl     L0077
	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	ina
	bne     L007F
	inx
L007F:	jsr     stax0sp
	bra     L0076
L0077:	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ UpdateDocInfo (int, int, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_UpdateDocInfo: near

.segment	"CODE"

	jsr     pusha
	lda     __editorLineSegments
	ldx     __editorLineSegments+1
	jsr     pushax
	lda     #$01
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L0086)
	ldx     #>(L0086)
	jsr     pushax
	ldy     #$0A
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	lda     #$0F
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L008D)
	ldx     #>(L008D)
	jsr     pushax
	ldy     #$08
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	lda     #$1E
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L0094)
	ldx     #>(L0094)
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _printf
	lda     #$2B
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	jsr     pushax
	lda     #$0C
	jsr     tosumula0
	jsr     addeq0sp
	lda     #<(L009D)
	ldx     #>(L009D)
	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	jsr     pushax
	ldy     #$06
	jsr     _printf
	lda     #$3E
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L00A5)
	ldx     #>(L00A5)
	jsr     pushax
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	jsr     pushax
	ldy     #$04
	jsr     _printf
	lda     __textPos+4
	clc
	adc     #$06
	jsr     pusha
	lda     __textPos+3
	jsr     _gotoxy
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ EnsureEditorLinesCapacity (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_EnsureEditorLinesCapacity: near

.segment	"CODE"

	jsr     pusha
	lda     __maxLine
	sec
	sbc     __editorLinesCapacity
	sta     tmp1
	lda     __maxLine+1
	sbc     __editorLinesCapacity+1
	ora     tmp1
	beq     L02CA
	bcs     L02CC
L02CA:	lda     (sp)
	cmp     #$01
	jne     incsp1
L02CC:	lda     __editorLinesCapacity
	clc
	adc     __editorLinesCapacity
	sta     __editorLinesCapacity
	lda     __editorLinesCapacity+1
	adc     __editorLinesCapacity+1
	sta     __editorLinesCapacity+1
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __editorLinesCapacity
	ldx     __editorLinesCapacity+1
	jsr     mulax3
	jsr     _realloc
	sta     __editorLines
	stx     __editorLines+1
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ Initialize (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Initialize: near

.segment	"CODE"

	stz     __maxLine
	stz     __maxLine+1
	stz     __textPos+2
	stz     __textPos
	stz     __textPos+1
	stz     __textPos+4
	stz     __textPos+3
	lda     #$04
	sta     __editorLinesCapacity
	stz     __editorLinesCapacity+1
	lda     #$01
	jsr     _EnsureEditorLinesCapacity
	lda     #<(__screenSize)
	ldx     #>(__screenSize)
	jsr     pushax
	lda     #<(__screenSize+1)
	ldx     #>(__screenSize+1)
	jsr     _screensize
	lda     __screenSize
	sec
	sbc     #$06
	bcs     L02CD
	sec
L02CD:	sbc     #$01
	sta     __screenSize
	lda     __screenSize+1
	sec
	sbc     #$01
	sta     __statusBarLineNo
	lda     __screenSize+1
	sec
	sbc     #$02
	sta     __debugLineNo
	jsr     _clrscr
	lda     #$01
	jsr     _cursor
	stz     __maxLineSegment
	stz     __maxLineSegment+1
	ldx     #$90
	stz     __editorLineSegments
	stx     __editorLineSegments+1
	stz     __firstFreeSegment
	stz     __firstFreeSegment+1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ PrintLineNumber (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_PrintLineNumber: near

.segment	"CODE"

	lda     #$00
	jsr     pusha
	lda     __textPos+3
	jsr     _gotoxy
	lda     #<(L00E0)
	ldx     #>(L00E0)
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	ina
	bne     L00E3
	inx
L00E3:	jsr     pushax
	ldy     #$04
	jmp     _printf

.endproc

; ---------------------------------------------------------------
; __near__ struct LineSegment * __near__ GetNextFreeLineSegment (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_GetNextFreeLineSegment: near

.segment	"CODE"

	jsr     decsp2
	lda     __firstFreeSegment
	ora     __firstFreeSegment+1
	bne     L00E5
	lda     __editorLineSegments
	ldx     __editorLineSegments+1
	jsr     pushax
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	jsr     pushax
	lda     #$0C
	jsr     tosmula0
	jsr     tosaddax
	jsr     stax0sp
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	ina
	bne     L00EB
	inx
L00EB:	sta     __maxLineSegment
	stx     __maxLineSegment+1
	bra     L00EC
L00E5:	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	jsr     stax0sp
	lda     __firstFreeSegment+1
	sta     ptr1+1
	lda     __firstFreeSegment
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	sta     __firstFreeSegment+1
	dey
	lda     (ptr1),y
	sta     __firstFreeSegment
L00EC:	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ SaveBufferToEditorMemory (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_SaveBufferToEditorMemory: near

.segment	"CODE"

	jsr     decsp6
	lda     #$00
	jsr     _EnsureEditorLinesCapacity
	jsr     _GetNextFreeLineSegment
	jsr     stax0sp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	ldy     #$01
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	lda     #$00
	ldy     #$05
	sta     (sp),y
	dey
L02D0:	sta     (sp),y
	cmp     __textPos+5
	bcs     L00FD
	iny
	lda     (sp),y
	cmp     #$0A
	bne     L0104
	jsr     _GetNextFreeLineSegment
	ldy     #$02
	jsr     staxysp
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$0A
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     stax0sp
	lda     #$00
	ldy     #$05
	sta     (sp),y
L0104:	jsr     pushw0sp
	ldy     #$07
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	jsr     tosadda0
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	tay
	lda     __lineBuffer,y
	ldy     #$00
	jsr     staspidx
	ldy     #$04
	lda     (sp),y
	ina
	bra     L02D0
L00FD:	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     __textPos+5
	sta     (ptr1)
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ GetBufferFromEditorMemoryAndPrint (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_GetBufferFromEditorMemoryAndPrint: near

.segment	"CODE"

	jsr     decsp8
	lda     __firstFreeSegment
	ora     __firstFreeSegment+1
	beq     L0117
	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	bra     L02D7
L011C:	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
L02D7:	ldy     #$04
	jsr     staxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L011C
	cmp     #$00
	bne     L011C
	ldy     #$07
	jsr     pushwysp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$0A
	jsr     staxspidx
	bra     L0126
L0117:	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	sta     __firstFreeSegment+1
	dey
	lda     (ptr1),y
	sta     __firstFreeSegment
L0126:	lda     __textPos+2
	sec
	sbc     __textPos+4
	sta     (sp)
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$06
	jsr     staxysp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$03
	sta     (sp),y
	sta     __textPos+5
	lda     #$00
	dey
	sta     (sp),y
	lda     #$06
	jsr     pusha
	lda     __textPos+3
	jsr     _gotoxy
	lda     #$00
	ldy     #$01
L02D8:	sta     (sp),y
	cmp     #$FF
	bcc     L02D9
	jmp     incsp8
L02D9:	lda     (sp),y
	ldy     #$03
	cmp     (sp),y
	bcs     L0141
	lda     #<(__lineBuffer)
	ldx     #>(__lineBuffer)
	ldy     #$01
	clc
	adc     (sp),y
	bcc     L0145
	inx
L0145:	jsr     pushax
	ldy     #$0B
	jsr     pushwysp
	ldy     #$06
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	jsr     tosadda0
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1)
	jsr     staspidx
	ldy     #$02
	lda     (sp),y
	cmp     #$0A
	bne     L014E
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$06
	jsr     staxysp
	lda     #$00
	ldy     #$02
	sta     (sp),y
	bra     L014E
L0141:	ldy     #$01
	lda     (sp),y
	tay
	lda     #$20
	sta     __lineBuffer,y
L014E:	ldy     #$01
	lda     (sp),y
	cmp     (sp)
	bcc     L013B
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	ldy     #$02
	lda     (sp),y
	clc
	adc     __screenSize
	bcc     L02D1
	ldx     #$01
L02D1:	jsr     tosicmp
	bcc     L0154
	bne     L013B
L0154:	ldy     #$01
	lda     (sp),y
	tay
	lda     __lineBuffer,y
	jsr     _cputc
L013B:	ldy     #$01
	lda     (sp),y
	ina
	jmp     L02D8

.endproc

; ---------------------------------------------------------------
; unsigned int __near__ GetWorkingLine (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_GetWorkingLine: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp5
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$03
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	ldy     #$04
L02DC:	sta     (sp),y
	cmp     #$FF
	bcs     L0166
	lda     (sp),y
	dey
	cmp     (sp),y
	bcs     L016D
	lda     #<(__workingLineBuffer)
	ldx     #>(__workingLineBuffer)
	iny
	clc
	adc     (sp),y
	bcc     L0171
	inx
L0171:	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	ldy     #$06
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	jsr     tosadda0
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1)
	jsr     staspidx
	ldy     #$02
	lda     (sp),y
	cmp     #$0A
	bne     L0167
	dey
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	lda     #$00
	ldy     #$02
	sta     (sp),y
	bra     L0167
L016D:	iny
	lda     (sp),y
	tay
	lda     #$20
	sta     __workingLineBuffer,y
L0167:	ldy     #$04
	lda     (sp),y
	ina
	bra     L02DC
L0166:	dey
	lda     (sp),y
	ldx     #$00
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ Invalidate (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Invalidate: near

.segment	"CODE"

	jsr     decsp7
	lda     __textPos+2
	sec
	sbc     __textPos+4
	ldy     #$01
	sta     (sp),y
	clc
	adc     __screenSize
	sta     (sp)
	lda     __textPos
	sec
	sbc     __textPos+3
	pha
	lda     __textPos+1
	sbc     #$00
	pla
	ldy     #$04
	sta     (sp),y
	lda     __maxLine
	ldx     __maxLine+1
	jsr     pushax
	ldx     #$00
	lda     __screenSize+1
	sec
	sbc     #$02
	bcs     L018A
	dex
L018A:	jsr     tosicmp
	bcs     L0187
	ldy     #$04
	lda     (sp),y
	clc
	adc     __maxLine
	pha
	lda     #$00
	adc     __maxLine+1
	pla
	bra     L02E8
L0187:	ldy     #$04
	lda     (sp),y
	clc
	adc     __screenSize+1
	sec
	sbc     #$02
L02E8:	dey
	sta     (sp),y
	iny
	lda     (sp),y
	iny
L02EA:	sta     (sp),y
	ldy     #$03
	cmp     (sp),y
	bcs     L02E7
	lda     #$00
	jsr     pusha
	lda     __textPos+3
	jsr     _gotoxy
	lda     #<(L019D)
	ldx     #>(L019D)
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	ina
	bne     L01A0
	inx
L01A0:	jsr     pushax
	ldy     #$04
	jsr     _printf
	lda     #$06
	jsr     pusha
	tay
	lda     (sp),y
	jsr     _gotoxy
	ldy     #$05
	lda     (sp),y
	ldx     #$00
	jsr     _GetWorkingLine
	ldy     #$02
	sta     (sp),y
	lda     #$00
	ldy     #$06
L02E9:	sta     (sp),y
	cmp     #$FF
	bcs     L0193
	lda     (sp),y
	ldy     #$01
	cmp     (sp),y
	bcc     L01A9
	ldy     #$06
	lda     (sp),y
	sec
	sbc     (sp)
	bcc     L02E6
	bne     L01A9
L02E6:	ldy     #$06
	lda     (sp),y
	tay
	lda     __workingLineBuffer,y
	jsr     _cputc
L01A9:	ldy     #$06
	lda     (sp),y
	ina
	bra     L02E9
L0193:	dey
	lda     (sp),y
	ina
	bra     L02EA
L02E7:	lda     __textPos+4
	clc
	adc     #$06
	jsr     pusha
	lda     __textPos+3
	jsr     _gotoxy
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ LineBufferToCurrentScreenLine (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LineBufferToCurrentScreenLine: near

.segment	"CODE"

	jsr     decsp3
	lda     __textPos+2
	sec
	sbc     __textPos+4
	ldy     #$01
	sta     (sp),y
	clc
	adc     __screenSize
	sta     (sp)
	lda     #$06
	jsr     pusha
	lda     __textPos+3
	jsr     _gotoxy
	lda     #$00
	ldy     #$02
L02F5:	sta     (sp),y
	cmp     #$FF
	bcs     L02F4
	lda     (sp),y
	dey
	cmp     (sp),y
	bcc     L01C5
	iny
	lda     (sp),y
	sec
	sbc     (sp)
	bcc     L02F2
	bne     L01C5
L02F2:	ldy     #$02
	lda     (sp),y
	sec
	sbc     __textPos+5
	sta     tmp1
	lda     tmp1
	beq     L02F3
	bcs     L01CF
L02F3:	lda     (sp),y
	tay
	lda     __lineBuffer,y
	bra     L02ED
L01CF:	lda     #$20
L02ED:	jsr     _cputc
L01C5:	ldy     #$02
	lda     (sp),y
	ina
	bra     L02F5
L02F4:	lda     __textPos+4
	clc
	adc     #$06
	jsr     pusha
	lda     __textPos+3
	jsr     _gotoxy
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ CursorLeft (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorLeft: near

.segment	"CODE"

	lda     __textPos+2
	beq     L01E1
	dec     __textPos+2
	dec     __textPos+4
	lda     __textPos+4
	cmp     #$FF
	bne     L01E1
	stz     __textPos+4
L01E1:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ CursorRight (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorRight: near

.segment	"CODE"

	lda     __textPos+2
	cmp     __textPos+5
	bcs     L01EA
	inc     __textPos+2
	inc     __textPos+4
	lda     __textPos+4
	jsr     pusha0
	lda     __screenSize
	sec
	sbc     #$01
	bcs     L01EC
	ldx     #$FF
L01EC:	jsr     tosicmp
	bcc     L01EA
	beq     L01EA
	lda     __screenSize
	sec
	sbc     #$01
	sta     __textPos+4
L01EA:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ DeleteLine (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DeleteLine: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp3
	lda     __maxLine
	ora     __maxLine+1
	bne     L02FA
	jmp     incsp5
L02FA:	lda     __maxLine
	ldy     #$03
	cmp     (sp),y
	lda     __maxLine+1
	iny
	sbc     (sp),y
	bcs     L02FB
	jmp     incsp5
L02FB:	lda     __firstFreeSegment
	ora     __firstFreeSegment+1
	beq     L01F6
	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	bra     L02F9
L01FB:	ldy     #$02
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
L02F9:	ldy     #$01
	jsr     staxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L01FB
	cmp     #$00
	bne     L01FB
	ldy     #$04
	jsr     pushwysp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$0A
	jsr     staxspidx
	bra     L0205
L01F6:	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	sta     __firstFreeSegment+1
	dey
	lda     (ptr1),y
	sta     __firstFreeSegment
L0205:	ldy     #$03
	lda     (sp),y
	sta     (sp)
	ldx     #$00
L02F8:	lda     (sp)
	cmp     __maxLine
	txa
	sbc     __maxLine+1
	bcs     L020A
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	jsr     pushax
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	ina
	bne     L0215
	inx
L0215:	jsr     mulax3
	jsr     tosaddax
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _memcpy
	ldx     #$00
	lda     (sp)
	ina
	sta     (sp)
	bra     L02F8
L020A:	lda     __maxLine
	ldx     __maxLine+1
	sec
	sbc     #$01
	bcs     L0217
	dex
L0217:	sta     __maxLine
	stx     __maxLine+1
	jsr     _Invalidate
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ InsertChar (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_InsertChar: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp1
	lda     __textPos+2
	cmp     #$FF
	bcc     L0303
	jmp     incsp2
L0303:	cmp     __textPos+5
	bne     L021C
	ldy     #$01
	lda     (sp),y
	ldy     __textPos+2
	sta     __lineBuffer,y
	inc     __textPos+2
	lda     __textPos+4
	cmp     __screenSize
	bcs     L0302
	ldy     #$01
	lda     (sp),y
	jsr     _cputc
	inc     __textPos+4
	bra     L0302
L021C:	jsr     decsp1
	lda     __textPos+5
	ldy     #$01
	sta     (sp),y
	cmp     #$FF
	bne     L02FF
	lda     (sp),y
	dea
	sta     (sp),y
L02FF:	lda     (sp),y
	sta     (sp)
	ldx     #$00
L0301:	lda     (sp)
	ina
	bne     L0237
	inx
L0237:	clc
	adc     #<(__lineBuffer)
	tay
	txa
	adc     #>(__lineBuffer)
	tax
	tya
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	tay
	lda     __lineBuffer,y
	ldy     #$00
	jsr     staspidx
	lda     (sp)
	cmp     __textPos+2
	beq     L022F
	ldx     #$00
	lda     (sp)
	dea
	sta     (sp)
	bra     L0301
L022F:	ldy     #$02
	lda     (sp),y
	ldy     __textPos+2
	sta     __lineBuffer,y
	jsr     _LineBufferToCurrentScreenLine
	jsr     incsp1
L0302:	inc     __textPos+5
	jsr     _CursorRight
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ DeleteChar (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DeleteChar: near

.segment	"CODE"

	jsr     decsp1
	ldx     #$00
	lda     __textPos+2
	cmp     __textPos+5
	bcs     L0245
L0307:	sta     (sp)
	cmp     __textPos+5
	bcs     L0306
	lda     #<(__lineBuffer)
	ldx     #>(__lineBuffer)
	clc
	adc     (sp)
	bcc     L0251
	inx
L0251:	sta     sreg
	stx     sreg+1
	ldx     #$00
	lda     (sp)
	ina
	bne     L0254
	inx
L0254:	sta     ptr1
	txa
	clc
	adc     #>(__lineBuffer)
	sta     ptr1+1
	ldy     #<(__lineBuffer)
	lda     (ptr1),y
	sta     (sreg)
	ldx     #$00
	lda     (sp)
	ina
	bra     L0307
L0306:	lda     __textPos+5
	sec
	sbc     #$01
	bcs     L0257
	dex
L0257:	clc
	adc     #<(__lineBuffer)
	sta     ptr1
	txa
	adc     #>(__lineBuffer)
	sta     ptr1+1
	lda     #$20
	sta     (ptr1)
	dec     __textPos+5
	jsr     _LineBufferToCurrentScreenLine
L0245:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ Backspace (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Backspace: near

.segment	"CODE"

	lda     __textPos+2
	beq     L025D
	jsr     _CursorLeft
	jmp     _DeleteChar
L025D:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ CursorUp (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorUp: near

.segment	"CODE"

	jsr     _SaveBufferToEditorMemory
	lda     __textPos
	ldx     __textPos+1
	sec
	sbc     #$01
	bcs     L0265
	dex
L0265:	sta     __textPos
	stx     __textPos+1
	dec     __textPos+3
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	sta     __textPos+5
	jsr     _GetBufferFromEditorMemoryAndPrint
	lda     __textPos+4
	jsr     pusha
	lda     __textPos+3
	jmp     _gotoxy

.endproc

; ---------------------------------------------------------------
; void __near__ CursorDown (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorDown: near

.segment	"CODE"

	lda     __maxLine
	ldx     __maxLine+1
	cpx     __textPos+1
	bne     L0309
	cmp     __textPos
	beq     L026E
L0309:	jsr     _SaveBufferToEditorMemory
	lda     __textPos
	ldx     __textPos+1
	ina
	bne     L0273
	inx
L0273:	sta     __textPos
	stx     __textPos+1
	inc     __textPos+3
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	sta     __textPos+5
	jsr     _GetBufferFromEditorMemoryAndPrint
	lda     __textPos+4
	jsr     pusha
	lda     __textPos+3
	jmp     _gotoxy
L026E:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ HandleReturnKey (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_HandleReturnKey: near

.segment	"CODE"

	lda     __maxLine
	ldx     __maxLine+1
	cpx     __textPos+1
	bne     L027D
	cmp     __textPos
	bne     L027D
	jsr     _SaveBufferToEditorMemory
	lda     __maxLine
	ldx     __maxLine+1
	ina
	bne     L0281
	inx
L0281:	sta     __maxLine
	stx     __maxLine+1
	lda     __textPos
	ldx     __textPos+1
	ina
	bne     L0283
	inx
L0283:	sta     __textPos
	stx     __textPos+1
	stz     __textPos+4
	stz     __textPos+2
	stz     __textPos+5
	lda     __textPos+3
	cmp     __screenSize+1
	bcs     L028A
	inc     __textPos+3
	jmp     _PrintLineNumber
L028A:	jsr     _Invalidate
	jmp     _PrintLineNumber
L027D:	stz     __textPos+4
	stz     __textPos+2
	jmp     _CursorDown

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     decsp1
	jsr     _Initialize
	jsr     _PrintLineNumber
L0299:	jsr     decsp4
	lda     __textPos
	ldy     #$02
	sta     (sp),y
	iny
	lda     __textPos+1
	sta     (sp),y
	lda     __textPos+2
	sta     (sp)
	ldy     #$01
	lda     #$00
	sta     (sp),y
	ldy     #$04
	lda     (sp),y
	jsr     _UpdateDocInfo
	jsr     _cgetc
	sta     (sp)
	cmp     #$0D
	bne     L030C
	jsr     _HandleReturnKey
	bra     L031B
L030C:	lda     (sp)
	cmp     #$14
	bne     L030E
	jsr     _Backspace
	bra     L031B
L030E:	lda     (sp)
	cmp     #$94
	bne     L0310
	jsr     _DeleteChar
	bra     L031B
L0310:	lda     (sp)
	cmp     #$05
	bne     L0312
	lda     __textPos
	cmp     __maxLine
	lda     __textPos+1
	sbc     __maxLine+1
	bcs     L031B
	lda     __textPos
	ldx     __textPos+1
	jsr     _DeleteLine
	bra     L031B
L0312:	lda     (sp)
	cmp     #$11
	bne     L0314
	jsr     _CursorDown
	bra     L031B
L0314:	lda     (sp)
	cmp     #$91
	bne     L0316
	lda     __textPos+3
	beq     L031B
	jsr     _CursorUp
	bra     L031B
L0316:	lda     (sp)
	cmp     #$9D
	bne     L0318
	jsr     _CursorLeft
	bra     L031B
L0318:	lda     (sp)
	cmp     #$1D
	bne     L0319
	jsr     _CursorRight
	bra     L031B
L0319:	lda     (sp)
	jsr     _InsertChar
L031B:	lda     (sp)
	cmp     #$03
	jne     L0299
	jmp     incsp1

.endproc

