;
; File generated by cc65 v 2.18 - Git f8be35b
;
	.fopt		compiler,"cc65 v 2.18 - Git f8be35b"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_realloc
	.import		_printf
	.import		_clrscr
	.import		_gotoxy
	.import		_cputc
	.import		_cgetc
	.import		_cursor
	.import		_screensize
	.export		__lineBuffer
	.export		__workingLineBuffer
	.export		__editorLines
	.export		__editorLinesCapacity
	.export		__editorLineSegments
	.export		__firstFreeSegment
	.export		__maxLineSegment
	.export		__textPos
	.export		__screenSize
	.export		__statusBarLineNo
	.export		__debugLineNo
	.export		__maxLine
	.export		_DebugPrint
	.export		_DebugPrintSlow
	.export		_UpdateDocInfo
	.export		_EnsureEditorLinesCapacity
	.export		_Initialize
	.export		_PrintLineNumber
	.export		_GetNextFreeLineSegment
	.export		_SaveBufferToEditorMemory
	.export		_GetBufferFromEditorMemoryAndPrint
	.export		_GetWorkingLine
	.export		_Invalidate
	.export		_LineBufferToCurrentScreenLine
	.export		_CursorLeft
	.export		_CursorRight
	.export		_DeleteLine
	.export		_InsertChar
	.export		_DeleteChar
	.export		_Backspace
	.export		_CursorUp
	.export		_CursorDown
	.export		_HandleReturnKey
	.export		_main

.segment	"RODATA"

L009D:
	.byte	$CC,$49,$4E,$45,$53,$2D,$2A,$3A,$20,$25,$D8,$2F,$25,$D8,$00
L0094:
	.byte	$CB,$45,$59,$43,$4F,$44,$45,$3A,$20,$25,$30,$33,$44,$00
L008D:
	.byte	$C3,$4F,$4C,$55,$4D,$4E,$3A,$20,$25,$30,$33,$44,$00
L0086:
	.byte	$CC,$49,$4E,$45,$3A,$20,$25,$30,$34,$44,$00
L00A5:
	.byte	$4D,$41,$58,$CC,$D3,$3A,$20,$25,$44,$00
L01A5:
	.byte	$25,$30,$34,$44,$3A,$00
L00EA	:=	L01A5+0

.segment	"BSS"

__lineBuffer:
	.res	255,$00
__workingLineBuffer:
	.res	255,$00
__editorLines:
	.res	2,$00
__editorLinesCapacity:
	.res	2,$00
__editorLineSegments:
	.res	2,$00
__firstFreeSegment:
	.res	2,$00
__maxLineSegment:
	.res	2,$00
__textPos:
	.res	6,$00
__screenSize:
	.res	5,$00
__statusBarLineNo:
	.res	1,$00
__debugLineNo:
	.res	1,$00
__maxLine:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ DebugPrint (__near__ const unsigned char *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DebugPrint: near

.segment	"CODE"

	jsr     pushax
	lda     #$01
	jsr     pusha
	lda     __debugLineNo
	jsr     _gotoxy
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ DebugPrintSlow (__near__ const unsigned char *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DebugPrintSlow: near

.segment	"CODE"

	jsr     pushax
	lda     #$01
	jsr     pusha
	lda     __debugLineNo
	jsr     _gotoxy
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	lda     #$00
	sta     (sp)
	ldy     #$01
	sta     (sp),y
L0076:	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	cmp     #$20
	txa
	sbc     #$4E
	bvc     L007D
	eor     #$80
L007D:	bpl     L0077
	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	ina
	bne     L007F
	inx
L007F:	jsr     stax0sp
	bra     L0076
L0077:	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ UpdateDocInfo (int, int, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_UpdateDocInfo: near

.segment	"CODE"

	jsr     pusha
	lda     __editorLineSegments
	ldx     __editorLineSegments+1
	jsr     pushax
	lda     #$01
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L0086)
	ldx     #>(L0086)
	jsr     pushax
	ldy     #$0A
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	lda     #$0F
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L008D)
	ldx     #>(L008D)
	jsr     pushax
	ldy     #$08
	jsr     pushwysp
	ldy     #$04
	jsr     _printf
	lda     #$1E
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L0094)
	ldx     #>(L0094)
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _printf
	lda     #$2B
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	jsr     pushax
	lda     #$0C
	jsr     tosumula0
	jsr     addeq0sp
	lda     #<(L009D)
	ldx     #>(L009D)
	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	jsr     pushax
	ldy     #$06
	jsr     _printf
	lda     #$3E
	jsr     pusha
	lda     __statusBarLineNo
	jsr     _gotoxy
	lda     #<(L00A5)
	ldx     #>(L00A5)
	jsr     pushax
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	jsr     pushax
	ldy     #$04
	jsr     _printf
	lda     __textPos+4
	clc
	adc     #$06
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ EnsureEditorLinesCapacity (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_EnsureEditorLinesCapacity: near

.segment	"CODE"

	jsr     pusha
	lda     __maxLine
	sec
	sbc     __editorLinesCapacity
	sta     tmp1
	lda     __maxLine+1
	sbc     __editorLinesCapacity+1
	ora     tmp1
	beq     L02EA
	bcs     L02EC
L02EA:	lda     (sp)
	cmp     #$01
	jne     incsp1
L02EC:	lda     __editorLinesCapacity
	clc
	adc     __editorLinesCapacity
	sta     __editorLinesCapacity
	lda     __editorLinesCapacity+1
	adc     __editorLinesCapacity+1
	sta     __editorLinesCapacity+1
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __editorLinesCapacity
	ldx     __editorLinesCapacity+1
	jsr     mulax3
	jsr     _realloc
	sta     __editorLines
	stx     __editorLines+1
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ Initialize (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Initialize: near

.segment	"CODE"

	stz     __maxLine
	stz     __maxLine+1
	stz     __textPos+2
	stz     __textPos
	stz     __textPos+1
	stz     __textPos+4
	stz     __textPos+3
	lda     #$04
	sta     __editorLinesCapacity
	stz     __editorLinesCapacity+1
	lda     #$01
	jsr     _EnsureEditorLinesCapacity
	lda     #<(__screenSize)
	ldx     #>(__screenSize)
	jsr     pushax
	lda     #<(__screenSize+1)
	ldx     #>(__screenSize+1)
	jsr     _screensize
	lda     __screenSize
	sec
	sbc     #$06
	bcs     L02EE
	sec
L02EE:	sbc     #$01
	sta     __screenSize
	lda     __screenSize+1
	sec
	sbc     #$01
	sta     __statusBarLineNo
	lda     #$01
	sta     __screenSize+2
	lda     __screenSize+1
	sec
	sbc     #$02
	sta     __screenSize+3
	sec
	sbc     __screenSize+2
	sta     __screenSize+4
	lda     __screenSize+1
	sec
	sbc     #$02
	sta     __debugLineNo
	jsr     _clrscr
	lda     #$01
	jsr     _cursor
	stz     __maxLineSegment
	stz     __maxLineSegment+1
	ldx     #$90
	stz     __editorLineSegments
	stx     __editorLineSegments+1
	stz     __firstFreeSegment
	stz     __firstFreeSegment+1
	lda     #$06
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jmp     _gotoxy

.endproc

; ---------------------------------------------------------------
; void __near__ PrintLineNumber (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_PrintLineNumber: near

.segment	"CODE"

	lda     #$00
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	lda     #<(L00EA)
	ldx     #>(L00EA)
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	ina
	bne     L00ED
	inx
L00ED:	jsr     pushax
	ldy     #$04
	jmp     _printf

.endproc

; ---------------------------------------------------------------
; __near__ struct LineSegment * __near__ GetNextFreeLineSegment (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_GetNextFreeLineSegment: near

.segment	"CODE"

	jsr     decsp2
	lda     __firstFreeSegment
	ora     __firstFreeSegment+1
	bne     L00EF
	lda     __editorLineSegments
	ldx     __editorLineSegments+1
	jsr     pushax
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	jsr     pushax
	lda     #$0C
	jsr     tosmula0
	jsr     tosaddax
	jsr     stax0sp
	lda     __maxLineSegment
	ldx     __maxLineSegment+1
	ina
	bne     L00F5
	inx
L00F5:	sta     __maxLineSegment
	stx     __maxLineSegment+1
	bra     L00F6
L00EF:	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	jsr     stax0sp
	lda     __firstFreeSegment+1
	sta     ptr1+1
	lda     __firstFreeSegment
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	sta     __firstFreeSegment+1
	dey
	lda     (ptr1),y
	sta     __firstFreeSegment
L00F6:	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ SaveBufferToEditorMemory (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_SaveBufferToEditorMemory: near

.segment	"CODE"

	jsr     decsp6
	lda     #$00
	jsr     _EnsureEditorLinesCapacity
	jsr     _GetNextFreeLineSegment
	jsr     stax0sp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	ldy     #$01
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	lda     #$00
	ldy     #$05
	sta     (sp),y
	dey
L02F2:	sta     (sp),y
	cmp     __textPos+5
	bcs     L0107
	iny
	lda     (sp),y
	cmp     #$0A
	bne     L010E
	jsr     _GetNextFreeLineSegment
	ldy     #$02
	jsr     staxysp
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$0A
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     stax0sp
	lda     #$00
	ldy     #$05
	sta     (sp),y
L010E:	jsr     pushw0sp
	ldy     #$07
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	jsr     tosadda0
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	tay
	lda     __lineBuffer,y
	ldy     #$00
	jsr     staspidx
	ldy     #$04
	lda     (sp),y
	ina
	bra     L02F2
L0107:	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     __textPos+5
	sta     (ptr1)
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	lda     #$00
	ldy     #$0A
	sta     (ptr1),y
	iny
	sta     (ptr1),y
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ GetBufferFromEditorMemoryAndPrint (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_GetBufferFromEditorMemoryAndPrint: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp8
	ldy     #$08
	lda     (sp),y
	jne     L02F6
	lda     __firstFreeSegment
	ora     __firstFreeSegment+1
	beq     L0125
	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	bra     L02FB
L012A:	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
L02FB:	ldy     #$04
	jsr     staxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L012A
	cmp     #$00
	bne     L012A
	ldy     #$07
	jsr     pushwysp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$0A
	jsr     staxspidx
	bra     L02F6
L0125:	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	sta     __firstFreeSegment+1
	dey
	lda     (ptr1),y
	sta     __firstFreeSegment
L02F6:	lda     __textPos+2
	sec
	sbc     __textPos+4
	sta     (sp)
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$06
	jsr     staxysp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$03
	sta     (sp),y
	sta     __textPos+5
	lda     #$00
	dey
	sta     (sp),y
	lda     #$06
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	lda     #$00
	ldy     #$01
L02FC:	sta     (sp),y
	cmp     #$FF
	jcs     L0148
	lda     (sp),y
	ldy     #$03
	cmp     (sp),y
	bcs     L014F
	lda     #<(__lineBuffer)
	ldx     #>(__lineBuffer)
	ldy     #$01
	clc
	adc     (sp),y
	bcc     L0153
	inx
L0153:	jsr     pushax
	ldy     #$0B
	jsr     pushwysp
	ldy     #$06
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	jsr     tosadda0
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1)
	jsr     staspidx
	ldy     #$02
	lda     (sp),y
	cmp     #$0A
	bne     L015C
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$06
	jsr     staxysp
	lda     #$00
	ldy     #$02
	sta     (sp),y
	bra     L015C
L014F:	ldy     #$01
	lda     (sp),y
	tay
	lda     #$20
	sta     __lineBuffer,y
L015C:	ldy     #$01
	lda     (sp),y
	cmp     (sp)
	bcc     L0149
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	ldy     #$02
	lda     (sp),y
	clc
	adc     __screenSize
	bcc     L02F4
	ldx     #$01
L02F4:	jsr     tosicmp
	bcc     L0162
	bne     L0149
L0162:	ldy     #$01
	lda     (sp),y
	tay
	lda     __lineBuffer,y
	jsr     _cputc
L0149:	ldy     #$01
	lda     (sp),y
	ina
	jmp     L02FC
L0148:	ldy     #$09
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned int __near__ GetWorkingLine (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_GetWorkingLine: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp5
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$03
	sta     (sp),y
	lda     #$00
	dey
	sta     (sp),y
	ldy     #$04
L02FF:	sta     (sp),y
	cmp     #$FF
	bcs     L0174
	lda     (sp),y
	dey
	cmp     (sp),y
	bcs     L017B
	lda     #<(__workingLineBuffer)
	ldx     #>(__workingLineBuffer)
	iny
	clc
	adc     (sp),y
	bcc     L017F
	inx
L017F:	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	ldy     #$06
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	jsr     tosadda0
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1)
	jsr     staspidx
	ldy     #$02
	lda     (sp),y
	cmp     #$0A
	bne     L0175
	dey
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	lda     #$00
	ldy     #$02
	sta     (sp),y
	bra     L0175
L017B:	iny
	lda     (sp),y
	tay
	lda     #$20
	sta     __workingLineBuffer,y
L0175:	ldy     #$04
	lda     (sp),y
	ina
	bra     L02FF
L0174:	dey
	lda     (sp),y
	ldx     #$00
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ Invalidate (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Invalidate: near

.segment	"CODE"

	jsr     decsp7
	lda     __textPos+2
	sec
	sbc     __textPos+4
	ldy     #$01
	sta     (sp),y
	clc
	adc     __screenSize
	sta     (sp)
	lda     __textPos
	sec
	sbc     __textPos+3
	pha
	lda     __textPos+1
	sbc     #$00
	pla
	ldy     #$04
	sta     (sp),y
	clc
	adc     __screenSize+4
	dey
	sta     (sp),y
	iny
	lda     (sp),y
	iny
	sta     (sp),y
	ldx     #$00
L0307:	lda     (sp),y
	ldy     #$03
	cmp     (sp),y
	jcs     L0312
	ldy     #$05
	lda     (sp),y
	sec
	sbc     __maxLine
	sta     tmp1
	txa
	sbc     __maxLine+1
	ora     tmp1
	beq     L0308
	jcs     L019F
	txa
L0308:	jsr     pusha
	ldy     #$06
	lda     (sp),y
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	lda     #<(L01A5)
	ldx     #>(L01A5)
	jsr     pushax
	ldy     #$07
	ldx     #$00
	lda     (sp),y
	ina
	bne     L01A8
	inx
L01A8:	jsr     pushax
	ldy     #$04
	jsr     _printf
	lda     #$06
	jsr     pusha
	tay
	lda     (sp),y
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	ldy     #$05
	ldx     #$00
	lda     (sp),y
	cmp     __maxLine
	txa
	sbc     __maxLine+1
	bcs     L0311
	lda     (sp),y
	jsr     _GetWorkingLine
	ldy     #$02
	sta     (sp),y
	lda     #$00
	ldy     #$06
L0313:	sta     (sp),y
	cmp     #$FF
	bcs     L0199
	lda     (sp),y
	ldy     #$01
	cmp     (sp),y
	bcc     L01B3
	ldy     #$06
	lda     (sp),y
	sec
	sbc     (sp)
	bcc     L030D
	bne     L01B3
L030D:	ldy     #$06
	lda     (sp),y
	tay
	lda     __workingLineBuffer,y
	jsr     _cputc
L01B3:	ldy     #$06
	lda     (sp),y
	ina
	bra     L0313
L019F:	ldy     #$01
	lda     (sp),y
	ldy     #$06
L0314:	sta     (sp),y
	sec
	sbc     (sp)
	bcc     L01C5
	bne     L0199
L01C5:	lda     #$20
	jsr     _cputc
	ldy     #$06
	lda     (sp),y
	ina
	bra     L0314
L0199:	dey
	ldx     #$00
L0311:	lda     (sp),y
	ina
	sta     (sp),y
	jmp     L0307
L0312:	lda     __textPos+4
	clc
	adc     #$06
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	sta     __textPos+5
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ LineBufferToCurrentScreenLine (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LineBufferToCurrentScreenLine: near

.segment	"CODE"

	jsr     decsp3
	lda     __textPos+2
	sec
	sbc     __textPos+4
	ldy     #$01
	sta     (sp),y
	clc
	adc     __screenSize
	sta     (sp)
	lda     #$06
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	lda     #$00
	ldy     #$02
L0321:	sta     (sp),y
	cmp     #$FF
	bcs     L0320
	lda     (sp),y
	dey
	cmp     (sp),y
	bcc     L01DD
	iny
	lda     (sp),y
	sec
	sbc     (sp)
	bcc     L031E
	bne     L01DD
L031E:	ldy     #$02
	lda     (sp),y
	sec
	sbc     __textPos+5
	sta     tmp1
	lda     tmp1
	beq     L031F
	bcs     L01E7
L031F:	lda     (sp),y
	tay
	lda     __lineBuffer,y
	bra     L0319
L01E7:	lda     #$20
L0319:	jsr     _cputc
L01DD:	ldy     #$02
	lda     (sp),y
	ina
	bra     L0321
L0320:	lda     __textPos+4
	clc
	adc     #$06
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jsr     _gotoxy
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ CursorLeft (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorLeft: near

.segment	"CODE"

	lda     __textPos+2
	beq     L01F9
	dec     __textPos+2
	dec     __textPos+4
	lda     __textPos+4
	cmp     #$FF
	bne     L01F9
	stz     __textPos+4
L01F9:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ CursorRight (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorRight: near

.segment	"CODE"

	lda     __textPos+2
	cmp     __textPos+5
	bcs     L0202
	inc     __textPos+2
	inc     __textPos+4
	lda     __textPos+4
	jsr     pusha0
	lda     __screenSize
	sec
	sbc     #$01
	bcs     L0204
	ldx     #$FF
L0204:	jsr     tosicmp
	bcc     L0202
	beq     L0202
	lda     __screenSize
	sec
	sbc     #$01
	sta     __textPos+4
L0202:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ DeleteLine (unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DeleteLine: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp3
	lda     __maxLine
	ora     __maxLine+1
	bne     L0326
	jmp     incsp5
L0326:	lda     __maxLine
	ldy     #$03
	cmp     (sp),y
	lda     __maxLine+1
	iny
	sbc     (sp),y
	bcs     L0327
	jmp     incsp5
L0327:	lda     __firstFreeSegment
	ora     __firstFreeSegment+1
	beq     L020E
	lda     __firstFreeSegment
	ldx     __firstFreeSegment+1
	bra     L0325
L0213:	ldy     #$02
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
L0325:	ldy     #$01
	jsr     staxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0B
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L0213
	cmp     #$00
	bne     L0213
	ldy     #$04
	jsr     pushwysp
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$0A
	jsr     staxspidx
	bra     L021D
L020E:	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (ptr1),y
	sta     __firstFreeSegment+1
	dey
	lda     (ptr1),y
	sta     __firstFreeSegment
L021D:	ldy     #$03
	lda     (sp),y
	sta     (sp)
	ldx     #$00
L0324:	lda     (sp)
	cmp     __maxLine
	txa
	sbc     __maxLine+1
	bcs     L0222
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	jsr     tosaddax
	jsr     pushax
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	ina
	bne     L022D
	inx
L022D:	jsr     mulax3
	jsr     tosaddax
	jsr     pushax
	ldx     #$00
	lda     #$03
	jsr     _memcpy
	ldx     #$00
	lda     (sp)
	ina
	sta     (sp)
	bra     L0324
L0222:	lda     __maxLine
	ldx     __maxLine+1
	sec
	sbc     #$01
	bcs     L022F
	dex
L022F:	sta     __maxLine
	stx     __maxLine+1
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	sta     __textPos+5
	jsr     _Invalidate
	lda     #$01
	jsr     _GetBufferFromEditorMemoryAndPrint
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ InsertChar (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_InsertChar: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp1
	lda     __textPos+2
	cmp     #$FF
	bcc     L032F
	jmp     incsp2
L032F:	cmp     __textPos+5
	bne     L0239
	ldy     #$01
	lda     (sp),y
	ldy     __textPos+2
	sta     __lineBuffer,y
	inc     __textPos+2
	lda     __textPos+4
	cmp     __screenSize
	bcs     L032E
	ldy     #$01
	lda     (sp),y
	jsr     _cputc
	inc     __textPos+4
	bra     L032E
L0239:	jsr     decsp1
	lda     __textPos+5
	ldy     #$01
	sta     (sp),y
	cmp     #$FF
	bne     L032B
	lda     (sp),y
	dea
	sta     (sp),y
L032B:	lda     (sp),y
	sta     (sp)
	ldx     #$00
L032D:	lda     (sp)
	ina
	bne     L0254
	inx
L0254:	clc
	adc     #<(__lineBuffer)
	tay
	txa
	adc     #>(__lineBuffer)
	tax
	tya
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	tay
	lda     __lineBuffer,y
	ldy     #$00
	jsr     staspidx
	lda     (sp)
	cmp     __textPos+2
	beq     L024C
	ldx     #$00
	lda     (sp)
	dea
	sta     (sp)
	bra     L032D
L024C:	ldy     #$02
	lda     (sp),y
	ldy     __textPos+2
	sta     __lineBuffer,y
	jsr     _LineBufferToCurrentScreenLine
	jsr     incsp1
L032E:	inc     __textPos+5
	jsr     _CursorRight
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ DeleteChar (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_DeleteChar: near

.segment	"CODE"

	jsr     decsp1
	ldx     #$00
	lda     __textPos+2
	cmp     __textPos+5
	bcs     L0262
L0333:	sta     (sp)
	cmp     __textPos+5
	bcs     L0332
	lda     #<(__lineBuffer)
	ldx     #>(__lineBuffer)
	clc
	adc     (sp)
	bcc     L026E
	inx
L026E:	sta     sreg
	stx     sreg+1
	ldx     #$00
	lda     (sp)
	ina
	bne     L0271
	inx
L0271:	sta     ptr1
	txa
	clc
	adc     #>(__lineBuffer)
	sta     ptr1+1
	ldy     #<(__lineBuffer)
	lda     (ptr1),y
	sta     (sreg)
	ldx     #$00
	lda     (sp)
	ina
	bra     L0333
L0332:	lda     __textPos+5
	sec
	sbc     #$01
	bcs     L0274
	dex
L0274:	clc
	adc     #<(__lineBuffer)
	sta     ptr1
	txa
	adc     #>(__lineBuffer)
	sta     ptr1+1
	lda     #$20
	sta     (ptr1)
	dec     __textPos+5
	jsr     _LineBufferToCurrentScreenLine
L0262:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ Backspace (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Backspace: near

.segment	"CODE"

	lda     __textPos+2
	beq     L027A
	jsr     _CursorLeft
	jmp     _DeleteChar
L027A:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ CursorUp (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorUp: near

.segment	"CODE"

	jsr     _SaveBufferToEditorMemory
	lda     __textPos
	ldx     __textPos+1
	sec
	sbc     #$01
	bcs     L0282
	dex
L0282:	sta     __textPos
	stx     __textPos+1
	dec     __textPos+3
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	sta     __textPos+5
	lda     #$00
	jsr     _GetBufferFromEditorMemoryAndPrint
	lda     __textPos+4
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jmp     _gotoxy

.endproc

; ---------------------------------------------------------------
; void __near__ CursorDown (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CursorDown: near

.segment	"CODE"

	lda     __maxLine
	ldx     __maxLine+1
	cpx     __textPos+1
	bne     L0337
	cmp     __textPos
	beq     L028C
L0337:	jsr     _SaveBufferToEditorMemory
	lda     __textPos
	ldx     __textPos+1
	ina
	bne     L0291
	inx
L0291:	sta     __textPos
	stx     __textPos+1
	inc     __textPos+3
	lda     __editorLines
	ldx     __editorLines+1
	jsr     pushax
	lda     __textPos
	ldx     __textPos+1
	jsr     mulax3
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	sta     __textPos+5
	lda     #$00
	jsr     _GetBufferFromEditorMemoryAndPrint
	lda     __textPos+4
	jsr     pusha
	lda     __textPos+3
	clc
	adc     __screenSize+2
	jmp     _gotoxy
L028C:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ HandleReturnKey (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_HandleReturnKey: near

.segment	"CODE"

	lda     __maxLine
	ldx     __maxLine+1
	cpx     __textPos+1
	bne     L029C
	cmp     __textPos
	bne     L029C
	jsr     _SaveBufferToEditorMemory
	lda     __maxLine
	ldx     __maxLine+1
	ina
	bne     L02A0
	inx
L02A0:	sta     __maxLine
	stx     __maxLine+1
	lda     __textPos
	ldx     __textPos+1
	ina
	bne     L02A2
	inx
L02A2:	sta     __textPos
	stx     __textPos+1
	stz     __textPos+4
	stz     __textPos+2
	stz     __textPos+5
	lda     __textPos+3
	cmp     __screenSize+1
	bcs     L02A9
	inc     __textPos+3
	jmp     _PrintLineNumber
L02A9:	jsr     _Invalidate
	jmp     _PrintLineNumber
L029C:	stz     __textPos+4
	stz     __textPos+2
	jmp     _CursorDown

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     decsp1
	jsr     _Initialize
	jsr     _PrintLineNumber
L02B8:	jsr     decsp4
	lda     __textPos
	ldy     #$02
	sta     (sp),y
	iny
	lda     __textPos+1
	sta     (sp),y
	lda     __textPos+2
	sta     (sp)
	ldy     #$01
	lda     #$00
	sta     (sp),y
	ldy     #$04
	lda     (sp),y
	jsr     _UpdateDocInfo
	jsr     _cgetc
	sta     (sp)
	cmp     #$0D
	bne     L033A
	jsr     _HandleReturnKey
	bra     L0349
L033A:	lda     (sp)
	cmp     #$14
	bne     L033C
	jsr     _Backspace
	bra     L0349
L033C:	lda     (sp)
	cmp     #$94
	bne     L033E
	jsr     _DeleteChar
	bra     L0349
L033E:	lda     (sp)
	cmp     #$05
	bne     L0340
	lda     __textPos
	cmp     __maxLine
	lda     __textPos+1
	sbc     __maxLine+1
	bcs     L0349
	lda     __textPos
	ldx     __textPos+1
	jsr     _DeleteLine
	bra     L0349
L0340:	lda     (sp)
	cmp     #$11
	bne     L0342
	jsr     _CursorDown
	bra     L0349
L0342:	lda     (sp)
	cmp     #$91
	bne     L0344
	lda     __textPos+3
	beq     L0349
	jsr     _CursorUp
	bra     L0349
L0344:	lda     (sp)
	cmp     #$9D
	bne     L0346
	jsr     _CursorLeft
	bra     L0349
L0346:	lda     (sp)
	cmp     #$1D
	bne     L0347
	jsr     _CursorRight
	bra     L0349
L0347:	lda     (sp)
	jsr     _InsertChar
L0349:	lda     (sp)
	cmp     #$03
	jne     L02B8
	jmp     incsp1

.endproc

